#!/bin/bash

# Files to watch. If these files change, `direnv`
# will trigger a `direnv reload`.
watch_file package.json
watch_file pyproject.toml

watch_file linters/.cspell.json
watch_file linters/.jscpd.json
watch_file linters/.prettierignore
watch_file linters/.prettierrc.yaml
watch_file linters/.secretlintignore
watch_file linters/.secretlintrc.json
watch_file linters/.yamllint.yaml

watch_file settings/default.json
watch_file settings/development.json
watch_file settings/staging.json
watch_file settings/production.json

# Loads a `.env` file into the current environment.
dotenv_if_exists .env

# Launch `lorri` if present. If not, default to
# direnv's `use nix`.
if has lorri; then
  eval "$(lorri direnv)"
else
  use nix
fi

# Creates and loads a virtual environment
# under `$PWD/.direnv/python-$python_version`.
# The Python version loaded by `direnv` will
# default to the entry found in the root level
# `shell.nix` file.
layout python

# Bootstrap the project development environment. 
# This will initialize or refresh project 
# configuration files, dependencies, and environment
# variables, respectively.
if [ "$INIT" != "True" ]; then
  invoke init
else
  invoke refresh
fi

# Display the current `git status` and fetch
# any remote changes.
if on_git_branch; then
  echo && git status --short --branch &&
    echo && git fetch --verbose
fi